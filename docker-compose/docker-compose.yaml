version: '3.8'

services:

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  cassandra:
    image: cassandra:latest
    container_name: cassandra_db
    environment:
      CASSANDRA_CLUSTER_NAME: SpringCassandraCluster
      CASSANDRA_DC: datacenter1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
    networks:
      - app-network

  cassandra_init:
    image: cassandra:latest
    depends_on:
      - cassandra
    restart: "no"
    entrypoint: ["./init.sh"]
    volumes:
      - ./init.sh:/init.sh
    networks:
      - app-network

  client-backend:
    image: backend
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      cassandra_init:
        condition: service_completed_successfully
      postgres:
        condition: service_started
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DATASOURCE: jdbc:postgresql://postgres:5432/postgres
      API_KEY: e3a4962c063c4bd186926bb77d8132df
      CASSANDRA_CONTACT: cassandra
    networks:
      - app-network

volumes:
  postgres_data:
  cassandra_data:

networks:
  app-network:
    driver: bridge